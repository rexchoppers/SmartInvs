plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group = 'fr.minuskube.inv'
version = '1.2.7'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    options.links(
            'https://hub.spigotmc.org/javadocs/spigot/',
            'https://docs.oracle.com/javase/8/docs/api/'
    )
    options.addStringOption('Xdoclint:none', '-quiet')
}

repositories {
    mavenCentral()
    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.21.8-R0.1-SNAPSHOT'
}

jar {
    archiveFileName = "SmartInvs-${project.version}.jar"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                name.set("SmartInvs")
                packaging = "jar"
                description.set("Advanced Inventory API for your Minecraft Bukkit plugins.")
                url.set("https://github.com/MinusKube/SmartInvs")

                scm {
                    connection.set("scm:git:git://github.com/MinusKube/SmartInvs.git")
                    developerConnection.set("scm:git:ssh://github.com:MinusKube/SmartInvs.git")
                    url.set("http://github.com/MinusKube/SmartInvs/tree/master")
                }

                licenses {
                    license {
                        name.set("GNU General Public License v3.0")
                        url.set("https://www.gnu.org/licenses/gpl-3.0.en.html")
                    }
                }

                developers {
                    developer {
                        id.set("minuskube")
                        name.set("MinusKube")
                        email.set("minuskube@gmail.com")
                    }
                }
            }
        }
    }

    repositories {
        maven {
            if (project.hasProperty("ossrhUsername") && project.hasProperty("ossrhPassword")) {
                url = uri("https://oss.sonatype.org/service/local/staging/deploy/maven2/")
                credentials {
                    username = project.ossrhUsername
                    password = project.ossrhPassword
                }
            } else {
                url = uri("$buildDir/repo") // local repo fallback
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
